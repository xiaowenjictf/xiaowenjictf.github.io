<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on xiaowenji&#39;s blog</title>
    <link>https://xiaowenjictf.github.io/</link>
    <description>Recent content from xiaowenji&#39;s blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    
    <managingEditor>ctfxiaowenji@gmail.com (xiaowenji)</managingEditor>
    <webMaster>ctfxiaowenji@gmail.com (xiaowenji)</webMaster>
    
    <copyright>All articles on this blog are licensed under the BY-NC-SA license agreement unless otherwise stated. Please indicate the source when reprinting!</copyright>
    
    <lastBuildDate>Fri, 12 Sep 2025 12:00:00 -0400</lastBuildDate>
    
    
    <atom:link href="https://xiaowenjictf.github.io/index.xml" rel="self" type="application/rss&#43;xml" />
    

    
    

    <item>
      <title>Paper</title>
      <link>https://xiaowenjictf.github.io/post/paper/</link>
      <pubDate>Fri, 12 Sep 2025 12:00:00 -0400</pubDate>
      <author>ctfxiaowenji@gmail.com (xiaowenji)</author>
      <guid>https://xiaowenjictf.github.io/post/paper/</guid>
      <description>
        <![CDATA[<h1>Paper</h1><p>Author: xiaowenji(ctfxiaowenji@gmail.com)</p>
        
          <h2 id="recon">
<a class="header-anchor" href="#recon"></a>
Recon
</h2><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">nmap -sC -sV -p- 10.10.11.143 -v
</span></span></code></pre></div><figure><img src="/images/htb/paper/nmap.png"
    alt="nmap scan output">
</figure>

<hr>
<h2 id="enumeration">
<a class="header-anchor" href="#enumeration"></a>
Enumeration
</h2><h1 id="web-port-80">
<a class="header-anchor" href="#web-port-80"></a>
Web (port 80)
</h1><p>We did not find anything manually with tools such as <code>ffuf</code>. Following a suggestion from ChatGPT, We used <code>whatweb</code> to attempt to obtain useful information.</p>
<p>As part of the output, a domain was discovered near the end:</p>
<figure><img src="/images/htb/paper/whatweb.png"
    alt="whatweb output showing discovered domain office.paper">
</figure>

<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">office.paper
</span></span></code></pre></div><p>We are dealing with a WordPress instance.</p>
<figure><img src="/images/htb/paper/image1.png"
    alt="screenshot indicating WordPress instance or domain references">
</figure>

<p>Reading the server content, We found a message that provided a hint indicating a possible vulnerability.</p>
        
        <hr><p>Published on 2025-09-12 at <a href='https://xiaowenjictf.github.io/'>xiaowenji's blog</a>, last modified on 2025-09-12</p>]]>
      </description>
      
        <category>htb</category>
      
    </item>
    
    

    <item>
      <title>Nahamcon CTF 2025 - Crypto Clock writeup</title>
      <link>https://xiaowenjictf.github.io/post/nahamcom/</link>
      <pubDate>Fri, 12 Sep 2025 12:00:00 -0400</pubDate>
      <author>ctfxiaowenji@gmail.com (xiaowenji)</author>
      <guid>https://xiaowenjictf.github.io/post/nahamcom/</guid>
      <description>
        <![CDATA[<h1>Nahamcon CTF 2025 - Crypto Clock writeup</h1><p>Author: xiaowenji(ctfxiaowenji@gmail.com)</p>
        
          <h1 id="challenge-overview">
<a class="header-anchor" href="#challenge-overview"></a>
Challenge Overview
</h1><p>The Crypto Clock challenge from Nahamcon 2025 provides an encrypted flag and some source code that generates a pseudo-random key using the current timestamp as a seed. The goal is to recover the original flag by replicating the key generation logic.</p>
<h2 id="initial-analysis">
<a class="header-anchor" href="#initial-analysis"></a>
Initial Analysis
</h2><p>We are given the following encrypted flag:</p>
<figure><img src="/images/ctfs/nahamcon2025/nc.png"
    alt="nc output">
</figure>

<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span> <span class="n">flag</span> <span class="o">=</span> <span class="s2">&#34;a6717b705265d3b9d810736c72b27bc8bcc5d245e68ccada61f8c16277d5a8bb5655db3cc7d0&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">flag</span><span class="p">))</span>
</span></span><span class="line"><span class="cl"><span class="mi">76</span>
</span></span><span class="line"><span class="cl"><span class="o">&gt;&gt;&gt;</span> <span class="nb">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">flag</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="mf">38.0</span>
</span></span></code></pre></div><blockquote>
<p>The hex-encoded string is 76 characters long, which corresponds to 38 bytes.</p>
        
        <hr><p>Published on 2025-09-12 at <a href='https://xiaowenjictf.github.io/'>xiaowenji's blog</a>, last modified on 2025-09-12</p>]]>
      </description>
      
        <category>ctf</category>
      
    </item>
    
    

    <item>
      <title>Ethernaut Challenges</title>
      <link>https://xiaowenjictf.github.io/post/ethernaut/</link>
      <pubDate>Thu, 11 Sep 2025 12:00:00 -0400</pubDate>
      <author>ctfxiaowenji@gmail.com (xiaowenji)</author>
      <guid>https://xiaowenjictf.github.io/post/ethernaut/</guid>
      <description>
        <![CDATA[<h1>Ethernaut Challenges</h1><p>Author: xiaowenji(ctfxiaowenji@gmail.com)</p>
        
          <h1 id="solving-ethernaut-challenges">
<a class="header-anchor" href="#solving-ethernaut-challenges"></a>
Solving Ethernaut Challenges!
</h1><hr>
<h2 id="fallback">
<a class="header-anchor" href="#fallback"></a>
Fallback
</h2><h3 id="challenge-code">
<a class="header-anchor" href="#challenge-code"></a>
Challenge Code
</h3><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="c1">// SPDX-License-Identifier: MIT
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="nx">pragma</span> <span class="nx">solidity</span> <span class="o">^</span><span class="mf">0.8</span><span class="p">.</span><span class="mi">0</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nx">contract</span> <span class="nx">Fallback</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">mapping</span><span class="p">(</span><span class="nx">address</span> <span class="p">=&gt;</span> <span class="nx">uint256</span><span class="p">)</span> <span class="kr">public</span> <span class="nx">contributions</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="nx">address</span> <span class="kr">public</span> <span class="nx">owner</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nx">constructor</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">owner</span> <span class="o">=</span> <span class="nx">msg</span><span class="p">.</span><span class="nx">sender</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="nx">contributions</span><span class="p">[</span><span class="nx">msg</span><span class="p">.</span><span class="nx">sender</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1000</span> <span class="o">*</span> <span class="p">(</span><span class="mi">1</span> <span class="nx">ether</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nx">modifier</span> <span class="nx">onlyOwner</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">require</span><span class="p">(</span><span class="nx">msg</span><span class="p">.</span><span class="nx">sender</span> <span class="o">==</span> <span class="nx">owner</span><span class="p">,</span> <span class="s2">&#34;caller is not the owner&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nx">_</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">function</span> <span class="nx">contribute</span><span class="p">()</span> <span class="kr">public</span> <span class="nx">payable</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">require</span><span class="p">(</span><span class="nx">msg</span><span class="p">.</span><span class="nx">value</span> <span class="o">&lt;</span> <span class="mf">0.001</span> <span class="nx">ether</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nx">contributions</span><span class="p">[</span><span class="nx">msg</span><span class="p">.</span><span class="nx">sender</span><span class="p">]</span> <span class="o">+=</span> <span class="nx">msg</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="p">(</span><span class="nx">contributions</span><span class="p">[</span><span class="nx">msg</span><span class="p">.</span><span class="nx">sender</span><span class="p">]</span> <span class="o">&gt;</span> <span class="nx">contributions</span><span class="p">[</span><span class="nx">owner</span><span class="p">])</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">owner</span> <span class="o">=</span> <span class="nx">msg</span><span class="p">.</span><span class="nx">sender</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">function</span> <span class="nx">getContribution</span><span class="p">()</span> <span class="kr">public</span> <span class="nx">view</span> <span class="nx">returns</span> <span class="p">(</span><span class="nx">uint256</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="nx">contributions</span><span class="p">[</span><span class="nx">msg</span><span class="p">.</span><span class="nx">sender</span><span class="p">];</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kd">function</span> <span class="nx">withdraw</span><span class="p">()</span> <span class="kr">public</span> <span class="nx">onlyOwner</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">payable</span><span class="p">(</span><span class="nx">owner</span><span class="p">).</span><span class="nx">transfer</span><span class="p">(</span><span class="nx">address</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">balance</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="nx">receive</span><span class="p">()</span> <span class="nx">external</span> <span class="nx">payable</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">require</span><span class="p">(</span><span class="nx">msg</span><span class="p">.</span><span class="nx">value</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="nx">contributions</span><span class="p">[</span><span class="nx">msg</span><span class="p">.</span><span class="nx">sender</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">        <span class="nx">owner</span> <span class="o">=</span> <span class="nx">msg</span><span class="p">.</span><span class="nx">sender</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>To solve, we contribute a small amount so our contribution is &gt; 0. Then we send ether directly to the contract, triggering <code>receive()</code>, which sets us as the new owner. Finally, we call <code>withdraw()</code> to drain the contract.</p>
        
        <hr><p>Published on 2025-09-11 at <a href='https://xiaowenjictf.github.io/'>xiaowenji's blog</a>, last modified on 2025-09-11</p>]]>
      </description>
      
        <category>ctf</category>
      
    </item>
    
  </channel>
</rss>
